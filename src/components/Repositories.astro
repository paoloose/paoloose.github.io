---
import type { Repository } from '@types';
import { wfetch } from '@common/wrappers/fetch';

const ghfetch = (url: string) => wfetch(url, {
  headers: {
    'Authorization': `Bearer ${import.meta.env.GH_TOKEN}`,
    'Accept': 'application/vnd.github+json'
  }
}).then(r => r.json());

const API_URL = 'https://api.github.com/users/paoloose/repos?sort=pushed&per_page=100';
const repos: Repository[] = await ghfetch(API_URL);

const sortedRepos = repos
  .filter(repo => repo.name !== 'paoloose' && !repo.fork);
---

{
  sortedRepos.map(repo => (
    <div class="repo">
      <a href={repo.html_url} target="_blank">{repo.name}</a>
      <p>{repo.description}</p>
      <div>
        {
          (async () => {
            const langs = await ghfetch(repo.languages_url);
            return Object.keys(langs)
              .map(lang => <span class="lang-tag">{lang}</span>);
          })()
        }
      </div>
    </div>
  ))
}

<style lang="scss">
  .repo {
    margin-bottom: 1.5rem;

    a, a:visited {
      display: inline-block;
      font-size: 1.1rem;
    }

    p {
      margin: 0.5rem 0 0.55rem 0;
    }

    span.lang-tag {
      display: inline-block;
      background-color: #dddddd;
      padding: 2px 7px;
      font-size: 12px;
      border-radius: 4px;
      margin-right: 6px;
    }
  }

  :root.dark {
    span.lang-tag {
      background-color: #333;
      color: #e5e3e0;
    }
  }
</style>
